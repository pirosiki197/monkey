// Code generated by "stringer -type TokenType -linecomment token.go"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-1]
	_ = x[EOF-2]
	_ = x[IDENT-3]
	_ = x[INT-4]
	_ = x[ASSIGN-5]
	_ = x[PLUS-6]
	_ = x[COMMA-7]
	_ = x[SEMICOLON-8]
	_ = x[LPAREN-9]
	_ = x[RPAREN-10]
	_ = x[LBRACE-11]
	_ = x[RBRACE-12]
	_ = x[FUNCTION-13]
	_ = x[LET-14]
}

const _TokenType_name = "ILLEGALEOFIDENTINT=+,;(){}FUNCTIONLET"

var _TokenType_index = [...]uint8{0, 7, 10, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 37}

func (i TokenType) String() string {
	i -= 1
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
